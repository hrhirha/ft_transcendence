
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  username      String
  email         String  @unique
  firstName     String?
  lastName      String?
  profileUrl    String?
  imageUrl      String

  refresh_token String?
  isTfaEnabled  Boolean? @default(false)
  tfaSecret     String?

  score         Int? @default(0)   // updated when a game is played
  status        String?            // "online", "offline", "in a game" ...

  wins          Int? @default(0)
  loses         Int? @default(0)

  sentReq       FriendReq[] @relation("sent")
  recievedReq   FriendReq[] @relation("received")

  messages      Message[]
  user_chats    UserChat[]

  @@map("users")
}

model FriendReq {
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  snd_id      String    // who sent the request
  rcv_id      String    // who received the request
  status      String    // accepted, pending, blocked

  sender      User @relation("sent",fields: [snd_id], references: [id], onDelete: Cascade)
  receiver    User @relation("received",fields: [rcv_id], references: [id], onDelete: Cascade)

  @@id([snd_id, rcv_id])
  @@map("friend_requests")
}

model Chat {
  id          String @id @default(cuid())
  name        String?
  type        String // PRIVATE, PUBLIC, PROTECTED
  password    String?

  messages    Message[]
  user_chats  UserChat[]

  @@map("chats")
}

model Message {
  id        String @id @default(cuid())
  timestamp DateTime @default(now())

  user_id   String
  user      User  @relation(fields: [user_id], references: [id], onDelete: Cascade)

  chat_id   String
  chat      Chat @relation(fields: [chat_id], references: [id], onDelete: Cascade)

  msg       String

  @@map("messages")
}

model UserChat {
  id          String @id @default(cuid())
  
  user_id     String
  user        User  @relation(fields: [user_id], references: [id])

  chat_id     String
  chat        Chat @relation(fields: [chat_id], references: [id])

  is_owner    Boolean
  is_admin    Boolean
  is_blocked  Boolean

  @@map("user_chats")
}
