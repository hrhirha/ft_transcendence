{"ast":null,"code":"var _jsxFileName = \"/Users/abahdir/Desktop/ft_transcendence/frontend/src/views/pages/profile/friends_manager/friends_manager.tsx\",\n    _s = $RefreshSig$();\n\nimport { faUsers, faUsersBetweenLines, faUsersRays, faUsersSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useEffect, useState } from \"react\";\nimport { EmptyBlocking, EmptyFriends, EmptyFriendsRequests, EmptyPending } from \"../../../../assets\";\nimport { get_friendreqs_received, get_friendreqs_sent } from \"../../../../controller/user/friendreq\";\nimport { get_friends, get_friends_blocked } from \"../../../../controller/user/friends\";\nimport { FriendCard } from \"../friend_card/friend_card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar tabs;\n\n(function (tabs) {\n  tabs[tabs[\"friends\"] = 1] = \"friends\";\n  tabs[tabs[\"requests\"] = 2] = \"requests\";\n  tabs[tabs[\"blocking\"] = 3] = \"blocking\";\n  tabs[tabs[\"pending\"] = 4] = \"pending\";\n})(tabs || (tabs = {}));\n\nconst NavBar = _ref => {\n  let {\n    activeTab,\n    onChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"navTabs\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: activeTab === tabs.friends ? \"active\" : undefined,\n      onClick: () => onChange(tabs.friends),\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), \"Friends\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: activeTab === tabs.requests ? \"active\" : undefined,\n      onClick: () => onChange(tabs.requests),\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faUsersRays\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), \"Requests\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: activeTab === tabs.blocking ? \"active\" : undefined,\n      onClick: () => onChange(tabs.blocking),\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faUsersSlash\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), \"Blocking\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: activeTab === tabs.pending ? \"active\" : undefined,\n      onClick: () => onChange(tabs.pending),\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faUsersBetweenLines\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), \"Pending\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c = NavBar;\nexport const FriendsManager = () => {\n  _s();\n\n  const [activeTab, setActiveTab] = useState(tabs.friends);\n  const [friendsList, setFriendsList] = useState([]);\n  useEffect(() => {\n    (async () => {\n      try {\n        switch (activeTab) {\n          case tabs.pending:\n            const pending = await get_friendreqs_sent();\n            setFriendsList(pending);\n            break;\n\n          case tabs.blocking:\n            const blocked = await get_friends_blocked();\n            setFriendsList(blocked);\n            break;\n\n          case tabs.requests:\n            const reqFriends = await get_friendreqs_received();\n            setFriendsList(reqFriends);\n            break;\n\n          default:\n            const friends = await get_friends();\n            setFriendsList(friends);\n        }\n      } catch (err) {}\n    })();\n\n    return () => {\n      setFriendsList([]);\n    };\n  }, [activeTab]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"friendsManager\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"headerNav\",\n      children: /*#__PURE__*/_jsxDEV(NavBar, {\n        activeTab: activeTab,\n        onChange: active => {\n          setActiveTab(active);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: [friendsList.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty\",\n          children: [activeTab === tabs.friends && /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"empty\",\n            src: EmptyFriends\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 56\n          }, this), activeTab === tabs.friends && /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"You Have No Friends Yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 56\n          }, this), activeTab === tabs.requests && /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"empty\",\n            src: EmptyFriendsRequests\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 57\n          }, this), activeTab === tabs.requests && /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"You Have No Friend Requests\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 57\n          }, this), activeTab === tabs.blocking && /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"empty\",\n            src: EmptyBlocking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 57\n          }, this), activeTab === tabs.blocking && /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"You Didn't Block Any One\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 57\n          }, this), activeTab === tabs.pending && /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"empty\",\n            src: EmptyPending\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 56\n          }, this), activeTab === tabs.pending && /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"You Have No Pending Requests\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 50\n        }, this), friendsList.length > 0 && friendsList.map(friend => /*#__PURE__*/_jsxDEV(FriendCard, {\n          id: friend.id,\n          type: activeTab.valueOf(),\n          avatar: friend.imageUrl,\n          fullName: friend.fullName,\n          username: friend.username,\n          action: id => {\n            setFriendsList(friendsList.filter(u => u.id !== id));\n          }\n        }, `${friend.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FriendsManager, \"7P3toPnN4EJmQOpSxQyXJdbxOB4=\");\n\n_c2 = FriendsManager;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavBar\");\n$RefreshReg$(_c2, \"FriendsManager\");","map":{"version":3,"names":["faUsers","faUsersBetweenLines","faUsersRays","faUsersSlash","FontAwesomeIcon","useEffect","useState","EmptyBlocking","EmptyFriends","EmptyFriendsRequests","EmptyPending","get_friendreqs_received","get_friendreqs_sent","get_friends","get_friends_blocked","FriendCard","tabs","NavBar","activeTab","onChange","friends","undefined","requests","blocking","pending","FriendsManager","setActiveTab","friendsList","setFriendsList","blocked","reqFriends","err","active","length","map","friend","id","valueOf","imageUrl","fullName","username","filter","u"],"sources":["/Users/abahdir/Desktop/ft_transcendence/frontend/src/views/pages/profile/friends_manager/friends_manager.tsx"],"sourcesContent":["import { faUsers, faUsersBetweenLines, faUsersRays, faUsersSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useEffect, useState } from \"react\";\nimport { EmptyBlocking, EmptyFriends, EmptyFriendsRequests, EmptyPending } from \"../../../../assets\";\nimport { get_friendreqs_received, get_friendreqs_sent } from \"../../../../controller/user/friendreq\";\nimport { get_friends, get_friends_blocked, user_info } from \"../../../../controller/user/friends\";\nimport { FriendCard } from \"../friend_card/friend_card\";\n\n\n\nenum tabs {\n    friends = 1,\n    requests = 2,\n    blocking = 3,\n    pending = 4\n}\n\nconst NavBar:React.FC<{activeTab: tabs, onChange: Function}> = ({activeTab, onChange}) => {\n    return (\n        <ul className=\"navTabs\">\n            <li className={activeTab === tabs.friends ? \"active\" : undefined}\n                onClick={() => onChange(tabs.friends)}>\n                <FontAwesomeIcon icon={faUsers}/>\n                Friends\n            </li>\n            <li className={activeTab === tabs.requests ? \"active\" : undefined}\n                onClick={() => onChange(tabs.requests)}>\n                <FontAwesomeIcon icon={faUsersRays}/>\n                Requests\n            </li>\n            <li className={activeTab === tabs.blocking ? \"active\" : undefined}\n                onClick={() => onChange(tabs.blocking)}>\n                <FontAwesomeIcon icon={faUsersSlash}/>\n                Blocking\n            </li>\n            <li className={activeTab === tabs.pending ? \"active\" : undefined}\n                onClick={() => onChange(tabs.pending)}>\n                <FontAwesomeIcon icon={faUsersBetweenLines}/>\n                Pending\n            </li>\n        </ul>\n    );\n}\n\nexport const FriendsManager:React.FC = () => {\n    const [activeTab, setActiveTab] = useState<tabs>(tabs.friends);\n    const [friendsList, setFriendsList] = useState<Array<user_info>>([]);\n    useEffect(() => {\n        (async () => {\n            try {\n                switch(activeTab)\n                {\n                    case tabs.pending:\n                        const pending: user_info[] = await get_friendreqs_sent();\n                        setFriendsList(pending);\n                    break;\n                    case tabs.blocking:\n                        const blocked: user_info[] = await get_friends_blocked();\n                        setFriendsList(blocked);\n                    break;\n                    case tabs.requests:\n                        const reqFriends: user_info[] = await get_friendreqs_received();\n                        setFriendsList(reqFriends);\n                    break;\n                    default:\n                        const friends: user_info[] = await get_friends();\n                        setFriendsList(friends);\n                }\n            } catch(err) {\n\n            }\n        })();\n        return () => {\n            setFriendsList([]);\n        }\n    }, [activeTab]);\n    return (\n        <section id=\"friendsManager\">\n            <nav className=\"headerNav\">\n                <NavBar activeTab={activeTab} onChange={(active: tabs) => {\n                    setActiveTab(active);\n                }}/>\n            </nav>\n            <div className=\"body\">\n                <div className=\"grid\">\n                    {friendsList.length === 0 && <div className=\"empty\">\n                        {activeTab === tabs.friends && <img alt=\"empty\" src={EmptyFriends}/>}\n                        {activeTab === tabs.friends && <h5>You Have No Friends Yet</h5>}\n                        {activeTab === tabs.requests && <img alt=\"empty\" src={EmptyFriendsRequests}/>}\n                        {activeTab === tabs.requests && <h5>You Have No Friend Requests</h5>}\n                        {activeTab === tabs.blocking && <img alt=\"empty\" src={EmptyBlocking}/>}\n                        {activeTab === tabs.blocking && <h5>You Didn't Block Any One</h5>}\n                        {activeTab === tabs.pending && <img alt=\"empty\" src={EmptyPending}/>}\n                        {activeTab === tabs.pending && <h5>You Have No Pending Requests</h5>}\n                    </div>}\n                    {friendsList.length > 0\n                    && friendsList.map((friend: user_info) => \n                    <FriendCard\n                        key={`${friend.id}`}\n                        id={friend.id}\n                        type = {activeTab.valueOf()}\n                        avatar = {friend.imageUrl}\n                        fullName= {friend.fullName}\n                        username = {friend.username}\n                        action={(id: string) => {setFriendsList(friendsList.filter((u) => u.id !== id))}}\n                    />)}\n                </div>\n            </div>\n        </section>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}